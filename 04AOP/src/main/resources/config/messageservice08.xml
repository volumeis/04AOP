<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	
	xmlns:aop="http://www.springframework.org/schema/aop"
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd"
						>


	<!-- Target Object -->
	<bean id="message" class="spring.service.aop.impl.MessageImpl"/>
	
	<!-- advice -->
	<bean id="pojoAspect" class="spring.service.aop.advice.PojoAspectJ"/>
		
	<aop:aspectj-autoproxy/>
	
	<!-- 1. 선언적으로 Point cut / Advice 정의 -->
	<aop:config>
		<aop:aspect ref="pojoAspect">
			<aop:pointcut expression="execution(* *.getMessage(..))" id="work"/>
			<aop:before 			pointcut-ref="work" method="before"/>
			<aop:after-returning	pointcut-ref="work" method="afterReturning" returning = "returnValue"/>
			<aop:around				pointcut-ref="work" method="invoke"/>
			<aop:after-throwing		pointcut-ref="work" method="afterThrowing"	throwing = "throwable"/>
		</aop:aspect>
	</aop:config>
	
	<!-- 2. 선언적으로 Point cut / Advice 정의 -->
	<!-- 
	<aop:config>
		<aop:aspect ref="pojoAspect">
			<aop:before 			pointcut="execution(* *.getMessage(..))" method="before"/>
			<aop:after-returning	pointcut="within(spring.service.aop..*)" method="afterReturning" returning = "returnValue"/>
			<aop:around				pointcut="excution(* spring.service.aop.*.*(..))" method="invoke"/>
			<aop:after-throwing		pointcut="execution(public * *(..))" method="afterThrowing"	throwing = "throwable"/>
		</aop:aspect>
	</aop:config>
	 -->
</beans>
